name: Build Packages

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types:
      - published
  workflow_dispatch:

env:
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  MINVERBUILDMETADATA: build.${{github.run_number}}
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0

      - name: 'Git Fetch Tags'
        run: git fetch --tags

      - name: Enable nuget package locking
        run: touch packages.lock.json

      - name: 'Install .NET SDK'
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json
          cache: true

      - name: 'Dotnet Tool Restore'
        run: dotnet tool restore

      - name: "Dotnet Cake Build"
        run: dotnet cake --target=Build

      - name: "Dotnet Cake Test"
        run: dotnet cake --target=Test

      - name: "Dotnet Cake Pack"
        run: dotnet cake --target=Pack

      - name: 'Publish Artifacts'
        uses: actions/upload-artifact@v3
        with:
          name: ubuntu-latest
          path: './Artifacts/*'

  publish-test-results:
    name: "Publish Tests Results"
    needs: build
    if: always()
    permissions:
      checks: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: "Download Artifact"
        uses: actions/download-artifact@v3.0.2
        with:
          path: "./Artifacts"
      - name: "Publish Test Summary"
        uses: test-summary/action@v2
        if: always()
        with:
          paths: "./Artifacts/*/*.xml"

  push-github-packages:
    name: "Push GitHub Packages"
    needs: build
    if: github.ref == 'refs/heads/main' || github.event_name == 'release'
    env:
      name: "GitHub Packages"
      url: "https://github.com/${{github.repository}}/packages"
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: "Download Artifact"
        uses: actions/download-artifact@v3.0.2
        with:
          name: "ubuntu-latest"
      - name: "Dotnet NuGet Add Source"
        run: dotnet nuget add source https://nuget.pkg.github.com/scottt732/index.json --name GitHub --username scottt732 --password ${{secrets.GITHUB_TOKEN}}
        shell: pwsh
      - name: "Dotnet NuGet Push"
        run: dotnet nuget push .\*.nupkg --api-key '${{ github.token }}' --source GitHub --skip-duplicate
        shell: pwsh
